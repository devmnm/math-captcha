{"version":3,"file":"captcha.min.js","sources":["../src/config.js","../src/generate-number.js","../src/operations.js","../src/index.js"],"sourcesContent":["\r\n/**\r\n *\r\n */\r\nconst config = {\r\n  min: 0,\r\n  max: 100, // Largest number to use in math operations\r\n  userNumberWords: false,\r\n  operationElem: document.getElementById('CaptchaOperation_lbl'),\r\n  answerTextElem: document.getElementById('CaptchaResult_txbox')\r\n}\r\n\r\nexport default config\r\n","\r\n/**\r\n *\r\n * @param {*} min\r\n * @param {*} max\r\n */\r\nexport default function generateNumber (min, max) {\r\n  //\r\n  /// Sanity checks\r\n  if (typeof min !== 'number' && typeof max !== 'number') {\r\n    return Math.random()\r\n  } // else...\r\n\r\n  // Compute and return random number\r\n  const num = Math.random() * (max - min) + min // Reference:\r\n  return Math.floor(num)\r\n}\n","\r\n/**\r\n *\r\n */\r\nconst operations = {\r\n  '+': function (op1, op2) { return op1 + op2 },\r\n  '-': function (op1, op2) { return op1 - op2 },\r\n  '*': function (op1, op2) { return op1 * op2 }\r\n}\r\n\r\nexport default operations\n","import config from './config'\r\nimport generateNumber from './generate-number'\r\nimport calculate from './operations'\r\n// import isFormInvalid from './is-form-valid'\r\nimport getNumberWord from './get-number-word'\r\n\r\nconst operand1 = generateNumber(config.min, config.max)\r\nconst operand2 = generateNumber(config.min, config.max)\r\nconst operator = '+'\r\n\r\nif (config.userNumberWords) {\r\n  config.operationElem.innerHTML = getNumberWord(operand1) + ' ' + operator + ' ' + getNumberWord(operand2)\r\n} else {\r\n  config.operationElem.innerHTML = operand1 + ' ' + operator + ' ' + operand2\r\n}\r\n\r\nconst result = calculate[operator](operand1, operand2)\r\nconsole.log(result)\r\n\r\nconfig.answerTextElem.setCustomValidity('Invalid value') // invalid as default\r\nconfig.answerTextElem.addEventListener('blur', function (e) {\r\n  if (config.answerTextElem.value === result.toString()) {\r\n    config.answerTextElem.setCustomValidity('') // valid\r\n  } else {\r\n    config.answerTextElem.setCustomValidity('Invalid value')\r\n  }\r\n})\r\n\r\n// const theForm = document.getElementById('form')\r\n// theForm.addEventListener('submit', function (e) {\r\n//   if (isFormInvalid.call(theForm, result)) {\r\n//     e.preventDefault()\r\n//     alert('Invalid')\r\n//     return false\r\n//   } else {\r\n//     return true\r\n//   }\r\n// })\r\n"],"names":["config","min","max","userNumberWords","operationElem","document","getElementById","answerTextElem","generateNumber","Math","random","num","floor","operand1","operand2","innerHTML","result","console","log","setCustomValidity","addEventListener","e","value","toString"],"mappings":"yBAIA,MAAMA,EAAS,CACbC,IAAK,EACLC,IAAK,IACLC,iBAAiB,EACjBC,cAAeC,SAASC,eAAe,wBACvCC,eAAgBF,SAASC,eAAe,wBCH3B,SAASE,EAAgBP,EAAKC,GAG3C,GAAmB,iBAARD,GAAmC,iBAARC,EACpC,OAAOO,KAAKC,SAId,MAAMC,EAAMF,KAAKC,UAAYR,EAAMD,GAAOA,EAC1C,OAAOQ,KAAKG,MAAMD,GCXpB,MCEME,EAAWL,EAAeR,EAAOC,IAAKD,EAAOE,KAC7CY,EAAWN,EAAeR,EAAOC,IAAKD,EAAOE,KAMjDF,EAAOI,cAAcW,UAAYF,EAAAA,MAAkCC,EAGrE,MAAME,EAA6BH,EAAUC,EAC7CG,QAAQC,IAAIF,GAEZhB,EAAOO,eAAeY,kBAAkB,iBACxCnB,EAAOO,eAAea,iBAAiB,QAAQ,SAAUC,GACnDrB,EAAOO,eAAee,QAAUN,EAAOO,WACzCvB,EAAOO,eAAeY,kBAAkB,IAExCnB,EAAOO,eAAeY,kBAAkB"}